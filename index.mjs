// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-square-matrix@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-vector-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";var m=e.isPrimitive,d=r,l=t,h=s,u=n,f=i,p=a,c=o;function g(e,r){return(r?f:u)("float64",new h(e*e),[e,e],[e,1],0,"row-major")}function v(e){var r;return r=new h(e),f("float64",r,[e],[1],0,"row-major")}var j=function(e,r){var t,s,n,i,a,o;if(o=0,m(e))s=g(t=e,!1);else{if(!d(e))throw new TypeError(c("invalid argument. First argument must either specify the order of the covariance matrix or be a square two-dimensional ndarray for storing the covariance matrix. Value: `%s`.",e));t=e.shape[0],s=e}if(a=new h(t),i=g(t,!0),arguments.length>1){if(!l(r))throw new TypeError(c("invalid argument. Second argument must be a one-dimensional ndarray. Value: `%s`.",r));if(p(r.shape)!==t)throw new Error(c("invalid argument. The number of elements (means) in the second argument must match covariance matrix dimensions. Expected: `%u`. Actual: `%u`.",t,p(r.shape)));return n=r,f}return n=v(t),u;function u(e){var r,m,d,h,u,f,p,g,v;if(0===arguments.length)return 0===o?null:s;if(!l(e))throw new TypeError(c("invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",e));if(e.shape[0]!==t)throw new Error(c("0dUA7",t,e.shape[0]));for(p=(f=o)/(o+=1),m=f||1,g=0;g<t;g++)for(u=n.get(g),a[g]=e.get(g)-u,u+=a[g]/o,n.set(g,u),d=p*a[g],v=0;v<=g;v++)h=i.get(g,v)+d*a[v],i.set(g,v,h),i.set(v,g,h),r=h/m,s.set(g,v,r),s.set(v,g,r);return s}function f(e){var r,m,d,h,u;if(0===arguments.length)return 0===o?null:s;if(!l(e))throw new TypeError(c("invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",e));if(e.shape[0]!==t)throw new Error(c("0dUA7",t,e.shape[0]));for(o+=1,h=0;h<t;h++)for(a[h]=e.get(h)-n.get(h),d=a[h],u=0;u<=h;u++)m=i.get(h,u)+d*a[u],i.set(h,u,m),i.set(u,h,m),r=m/o,s.set(h,u,r),s.set(u,h,r);return s}};export{j as default};
//# sourceMappingURL=index.mjs.map
